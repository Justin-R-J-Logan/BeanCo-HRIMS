package com.hrims.main.frames;


import com.hrims.main.LoginManager;
import com.hrims.main.data.ScheduleDay;
import com.hrims.main.sql.SQLSchedule;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Properties;
import org.jdatepicker.JDatePicker;
import org.jdatepicker.UtilDateModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mrdsc
 */
public class Schedule_Viewer extends javax.swing.JInternalFrame {

    int pageNumber = 0;
    int resultsPerPage = 25;
    int start = 2010;
    int end = 2150;
    java.sql.Date d = new java.sql.Date(new GregorianCalendar().getTime().getTime());;
    
    ArrayList<ScheduleDay> schedules = new ArrayList<ScheduleDay>();
    /**
     * Creates new form Employee
     */
    public Schedule_Viewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cmbYear = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        cmbMonth = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Schedule Editor");
        setMinimumSize(new java.awt.Dimension(1024, 540));
        setPreferredSize(new java.awt.Dimension(1024, 540));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Time Start", "Time End"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblData);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        populateYear();
        jPanel1.add(cmbYear, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jPanel2.add(cmbMonth, java.awt.BorderLayout.LINE_START);

        jPanel3.setLayout(new java.awt.BorderLayout());

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        defaultMonth();
        defaultYear(); 
        Update();
    }//GEN-LAST:event_formInternalFrameOpened

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        defaultMonth();
        defaultYear(); 
        Update();
    }//GEN-LAST:event_formComponentShown

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Update();
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    // End of variables declaration//GEN-END:variables

    public void Update() {
        d.setYear(cmbYear.getSelectedIndex()+start-1900);
        d.setMonth(cmbMonth.getSelectedIndex());
        d.setDate(1);
        //System.out.println("Date: " + dateSelection.toString());
        schedules = SQLSchedule.ME.getSchedulesFromAccountIDandStartDate(LoginManager.MYACCOUNT.getAccountNumber(), d);
        pageNumber = 0;
        Reload();
    }
    
    private void populateYear() {
        cmbYear.removeAllItems();
        for(Integer i = start; i <= end; i++) {
            cmbYear.addItem(i.toString());
        }
    }
    
    private void defaultMonth() {
        cmbMonth.setSelectedIndex(new GregorianCalendar().get(Calendar.MONTH));
    }
    private void defaultYear() {
        cmbYear.setSelectedIndex(new GregorianCalendar().get(Calendar.YEAR) - start);
    }

    public void Reload() {
        //dateSelection = date from jdpDatePicker, make use of some method to convert if necessary.
        //ArrayList<ScheduleDay> schedules = SQLSchedule.ME.getSchedules(dateSelection);
        for(int y = 0; y < tblData.getRowCount(); y++) {
            for(int x = 0; x < tblData.getColumnCount(); x++) {
                if(y >= schedules.size()) {
                    tblData.getModel().setValueAt("", y, x);
                } else {
                    ScheduleDay schd = schedules.get(y + (pageNumber * resultsPerPage));
                    String information = "";
                    switch(x) {
                        case 0:
                            information = ""+schd.getDate();
                            break;
                        case 1:
                            information = ""+schd.getStart();
                            break;
                        case 2:
                            information = ""+schd.getEnd();
                            break;
                        }
                    tblData.getModel().setValueAt(information, y, x);
                }
            }
        }
    }
}
